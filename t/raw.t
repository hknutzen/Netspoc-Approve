#!/usr/bin/perl

use strict;
use warnings;
use Test::More;
use Test::Differences;
use lib 't';
use Test_Approve;

# Input from Netspoc, from raw, output from approve.
my($spoc, $device, $out, $warn);
my $title;

############################################################
$title = "Merge routing NX-OS";
############################################################
$spoc = {
spoc4 => <<END
vrf context one
 ip route 10.20.0.0/19 10.1.2.3
ip route 10.23.0.0/16 10.1.2.5
END
,
raw => <<END
ip route 10.22.0.0/16 10.1.2.4
vrf context two
 ip route 10.0.0.0/8 10.1.2.2
END
};

$out = <<END;
ip route 10.22.0.0/16 10.1.2.4
ip route 10.23.0.0/16 10.1.2.5
vrf context one
ip route 10.20.0.0/19 10.1.2.3
vrf context two
ip route 10.0.0.0/8 10.1.2.2
END

test_run($title, 'NX-OS', '', $spoc, $out);

############################################################
$title = "Merge routing Linux";
############################################################
$spoc = {
spoc4 => <<END
ip route add 10.20.0.0/19 via 10.1.2.3
ip route add 10.23.0.0/16 via 10.1.2.5
END
,
raw => <<END
ip route add 10.22.0.0/16 via 10.1.2.4
ip route add 10.0.0.0/8 via 10.1.2.2
END
};

$out = <<END;
ip route add 10.20.0.0/19 via 10.1.2.3
ip route add 10.22.0.0/16 via 10.1.2.4
ip route add 10.23.0.0/16 via 10.1.2.5
ip route add 10.0.0.0/8 via 10.1.2.2
END

test_run($title, 'Linux', '', $spoc, $out);

############################################################
$title = "No routing in [APPEND] part";
############################################################
$spoc = {
spoc4 => '',

raw => <<END
[APPEND]
ip route 10.22.0.0/16 10.1.2.4
END
};

$out = <<END;
ERROR>>> Must only use ACLs in [APPEND] part, but found ROUTING_VRF
END

test_err($title, 'NX-OS', '', $spoc, $out);

############################################################
$title = "Merge Linux chains";
############################################################

$spoc = {
spoc4 => <<END
*filter
:INPUT DROP
-A INPUT -i eth0 -s 10.0.6.0/24 -d 10.0.1.11/32 -p udp --dport 123 -j ACCEPT
-A INPUT -j DROP
END
,
raw => <<END
*mangle
:PREROUTING ACCEPT
-A PREROUTING -j MARK --set-xmark 0x01 -p TCP --dport 80
*filter
:INPUT DROP
:c1 -
-A c1 -s 10.0.6.0/24 -j ACCEPT
-A INPUT -i eth0 -p udp -d 224.0.1.1/32 --dport 123 -j c1
[APPEND]
*filter
:INPUT DROP
-A INPUT -i eth0 -p udp -d 224.0.1.1/32 --dport 123 -j DROP
END
};

$out = <<'END';
iptables differs at [keys: <->filter,mangle]
#!/sbin/iptables-restore
# Generated by NetSPoC
*filter
:INPUT DROP
:c1 -
-A INPUT -i eth0 -p udp -d 224.0.1.1/32 --dport 123 -j c1
-A INPUT -i eth0 -s 10.0.6.0/24 -d 10.0.1.11/32 -p udp --dport 123 -j ACCEPT
-A INPUT -i eth0 -p udp -d 224.0.1.1/32 --dport 123 -j DROP
-A INPUT -j DROP
-A c1 -s 10.0.6.0/24 -j ACCEPT
COMMIT
*mangle
:PREROUTING ACCEPT
-A PREROUTING -j MARK --set-xmark 0x01 -p TCP --dport 80
COMMIT
END

test_run($title, 'Linux', '', $spoc, $out);

############################################################
$title = "Must not reference Netspoc generated chain";
############################################################

$spoc = {
spoc4 => <<END
*filter
:INPUT DROP
:c1 -
-A c1 -s 10.0.6.0/24 -j ACCEPT
-A INPUT -i eth0 -p udp -d 224.0.1.1/32 --dport 123 -j c1
END
,
raw => <<END
*filter
:c1 -
-A c1 -s 10.0.7.0/24 -j ACCEPT
END
};

$out = <<'END';
ERROR>>> Must not redefine chain 'c1' from rawdata
END

test_err($title, 'Linux', '', $spoc, $out);

############################################################
done_testing;
