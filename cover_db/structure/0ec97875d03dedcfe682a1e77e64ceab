{"statement":[31,31,31,32,32,32,33,33,33,34,34,34,35,35,35,36,36,36,37,37,37,45,46,47,66,67,68,70,72,73,74,75,76,77,78,79,82,86,89,92,93,95,111,112,113,114,115,118,119,121,122,125,126,127,128,132,132,134,135,138,139,142,145,146,147,150,154,155,158,159,161,162,163,164,165,166,167,168,175,176,178,179,180,181,183,184,185,188,189,193,194,196,197,198,200,201,202,206,207,208,209,210,211,212,216,217,218,219,220,225,226,227,228,230,232,233,235,236,237,239,240,242,246,247,248,249,250,251,252,253,257,258,259,260,261,262,281,282,283,284,285,286,287,288,289,291,292,295,299,300,301,302,302,303,304,305,309,312,313,315,316,317,317,319,320,321,323,324,326,329,330,332,333,335,336,337,339,344,347,349,350,355,360,363,366,370,371,372,375,378,381,384,385,386,387,390,397,398,399,400,401,402,404,405,406,408,409,410,411,413,415,414,415,416,417,418,419,421,422,423,424,425,428,432,433,435,436,438,439,441,442,443,444,446,447,448,449,450,453,454,456,457,458,459,460,462,463,463,466,467,468,469,470,471,476,481,486,490,494,496,497,498,499,500,504,505,506,507,507,508,511,512,515,516,518,519,520,521,522,523,524,525,526,527,533,534,535,536,540,541,542,543,544,545,547,548,550,556,558,559,560,563,567,571,572,578,579,579,584,590,592,593,595,596,597,598,599,600,601,602,605,606,607,608,609,610,615,620,620,620,622,623,624,628,629,630,631,632,633,636,638,639,640,641,643,644,645,646,647,648,649,650,653,656,657,670,671,672,673,684,685,686,687,688,689,690,697,698,699,700,701,703,704,705,706,707,708,709,710,712,714,715,716,717,718,719,721,723,726,728,741,742,743,744,745,746,750,751,752,753,754,755,756,757,759,760,761,762,763,764,765,769,770,771,773,775,777,778,779,797,798,799,801,802,803,804,806,807,808,809,810,811,812,813,814,816,817,820,821,823,824,827,828,830,831,831,834,838,845,846,847,848,849,850,854,861,862,863,864,865,866,867,868,869,873,883,884,885,886,886,887,888,888,889,890,890,891,892,899,903,905,906,907,908,909,911,913,915,918,919,920,923,924,928,929,930,931,933,936,941,943,944,945,946,948,948,951,952,953,954,958,959,960,961,968,969,970,971,975,980,982,984,985,988,989,990,993,994,997,998,1001,1004,1005,1010,1016,1017,1018,1019,1021,1021,1023,1024,1028,1033,1037,1038,1040,1041,1042,1043,1044,1045,1048,1049,1043,1052,1053,1054,1058,1061,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1076,1077,1082,1084,1085,1086,1092,1094,1095,1098,1104,1105,1106,1110,1111,1112,1116,1117,1118,1120,1125,1126,1127,1129,1131,1132,1133,1134,1135,1139,1140,1141,1147,1149,1150,1153,1154,1155,1156,1159,1160,1162,1163,1164,1165,1168,1169,1171,1172,1173,1174,1176,1177,1182,1183,1184,1189,1194,1198,1199,1200,1203,1205,1210,1211,1215,1216,1217,1218,1219,1222,1228,1229,1230,1231,1233,1234,1238,1239,1240,1246,1251,1252,1253,1254,1260,1261,1262,1263,1264,1268,1269,1270,1271,1272,1273,1274,1277,1281,1282,1283,1284,1285,1286,1290,1291,1292,1293,1294,1295,1296,1300,1301,1308,1309,1313,1314,1314,1315,1316,1319,1325,1326,1326,1326,1330,1331,1332,1333,1337,1338,1339,1340,1341,1342,1343,1344,1345,1349,1350,1351,1352,1353,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1368,1369,1373,1375,1376,1379,1380,1381,1388,1392,1394,1395,1397,1408,1409,1410,1411,1415,1418,1423,1424],"start":{"571":{"route_line_destination_a_eq_b":[{"branch":88,"pod":17,"subroutine":24,"time":null,"statement":303,"condition":16}]},"32":{"BEGIN":[{"branch":null,"subroutine":1,"pod":null,"time":null,"statement":3,"condition":null}]},"1092":{"cmd":[{"pod":33,"subroutine":40,"branch":158,"condition":35,"statement":576,"time":null}]},"31":{"BEGIN":[{"time":null,"condition":null,"statement":null,"branch":null,"subroutine":null,"pod":null}]},"1300":{"mark_as_changed":[{"branch":177,"pod":53,"subroutine":60,"time":null,"condition":39,"statement":681}]},"-1":{"__COVER__":[{"branch":191,"pod":64,"subroutine":71,"time":null,"condition":42,"statement":744}]},"1125":{"get_cmd_output":[{"time":null,"statement":590,"condition":35,"branch":160,"subroutine":44,"pod":37}]},"36":{"BEGIN":[{"statement":15,"condition":null,"time":null,"pod":null,"subroutine":5,"branch":null}]},"34":{"BEGIN":[{"pod":null,"subroutine":3,"branch":null,"statement":9,"condition":null,"time":null}]},"1189":{"schedule_reload":[{"statement":626,"condition":38,"time":null,"pod":41,"subroutine":48,"branch":167}]},"1408":{"lock":[{"branch":187,"subroutine":69,"pod":62,"time":null,"condition":41,"statement":736}]},"1325":{"found_changes":[{"branch":178,"pod":56,"subroutine":63,"time":null,"statement":691,"condition":40}]},"1198":{"checkidentity":[{"branch":167,"pod":43,"subroutine":50,"time":null,"statement":628,"condition":38}]},"1308":{"mark_as_unchanged":[{"branch":177,"pod":54,"subroutine":61,"time":null,"condition":39,"statement":683}]},"111":{"get_aaa_password":[{"condition":null,"statement":42,"time":null,"pod":3,"subroutine":10,"branch":6}]},"494":{"parse_config":[{"condition":7,"statement":258,"time":null,"subroutine":21,"pod":14,"branch":76}]},"750":{"acl_line_a_eq_b":[{"pod":25,"subroutine":32,"branch":118,"statement":396,"condition":24,"time":null}]},"1116":{"cmd_check_echo":[{"condition":35,"statement":586,"time":null,"pod":36,"subroutine":43,"branch":159}]},"504":{"merge_rawdata":[{"condition":7,"statement":264,"time":null,"pod":15,"subroutine":22,"branch":76}]},"1349":{"compare_files":[{"time":null,"statement":708,"condition":40,"branch":178,"pod":59,"subroutine":66}]},"1215":{"checkbanner":[{"branch":168,"pod":45,"subroutine":52,"time":null,"statement":635,"condition":38}]},"670":{"ports_a_in_b":[{"branch":97,"pod":21,"subroutine":28,"time":null,"condition":18,"statement":355}]},"1268":{"con_shutdown":[{"subroutine":57,"pod":50,"branch":175,"condition":39,"statement":660,"time":null}]},"845":{"prot_relation":[{"condition":30,"statement":448,"time":null,"subroutine":34,"pod":27,"branch":134}]},"35":{"BEGIN":[{"time":null,"condition":null,"statement":12,"branch":null,"pod":null,"subroutine":4}]},"684":{"ip_netz_a_in_b":[{"time":null,"statement":359,"condition":20,"branch":99,"subroutine":29,"pod":22}]},"697":{"services_a_in_b":[{"subroutine":30,"pod":23,"branch":101,"statement":366,"condition":20,"time":null}]},"1082":{"issue_cmd":[{"subroutine":39,"pod":32,"branch":158,"statement":572,"condition":35,"time":null}]},"66":{"get_cw_password":[{"branch":null,"subroutine":8,"pod":1,"time":null,"statement":24,"condition":null}]},"903":{"acl_array_compare_a_in_b":[{"time":null,"condition":32,"statement":479,"branch":139,"pod":30,"subroutine":37}]},"281":{"add_prefix_info":[{"branch":25,"subroutine":17,"pod":10,"time":null,"statement":136,"condition":2}]},"1194":{"cancel_reload":[{"branch":167,"subroutine":49,"pod":42,"time":null,"condition":38,"statement":627}]},"1251":{"move_logfile":[{"pod":48,"subroutine":55,"branch":172,"condition":39,"statement":651,"time":null}]},"1238":{"banner_msg":[{"pod":47,"subroutine":54,"branch":172,"statement":647,"condition":39,"time":null}]},"1210":{"search_banner":[{"branch":168,"subroutine":51,"pod":44,"time":null,"condition":38,"statement":633}]},"1423":{"unlock":[{"statement":742,"condition":42,"time":null,"subroutine":70,"pod":63,"branch":190}]},"1147":{"two_cmd":[{"time":null,"condition":36,"statement":602,"branch":163,"pod":39,"subroutine":46}]},"193":{"load_spocfile":[{"subroutine":13,"pod":6,"branch":16,"statement":89,"condition":2,"time":null}]},"1037":{"acl_equal":[{"time":null,"statement":544,"condition":34,"branch":154,"pod":31,"subroutine":38}]},"590":{"process_routing":[{"time":null,"condition":17,"statement":309,"branch":88,"subroutine":27,"pod":20}]},"741":{"acl_line_a_in_b":[{"time":null,"statement":390,"condition":22,"branch":114,"pod":24,"subroutine":31}]},"1260":{"con_setup":[{"statement":655,"condition":39,"time":null,"subroutine":56,"pod":49,"branch":174}]},"1290":{"prepare_device":[{"time":null,"statement":674,"condition":39,"branch":177,"pod":52,"subroutine":59}]},"883":{"get_hash_matches":[{"condition":32,"statement":465,"time":null,"subroutine":36,"pod":29,"branch":136}]},"246":{"load_spoc":[{"statement":122,"condition":2,"time":null,"subroutine":15,"pod":8,"branch":25}]},"175":{"get_spoc_data":[{"branch":13,"subroutine":12,"pod":5,"time":null,"condition":2,"statement":78}]},"1330":{"compare_common":[{"branch":178,"pod":57,"subroutine":64,"time":null,"statement":695,"condition":40}]},"556":{"route_line_a_eq_b":[{"statement":297,"condition":12,"time":null,"subroutine":23,"pod":16,"branch":85}]},"86":{"match":[{"branch":6,"subroutine":9,"pod":2,"time":null,"statement":37,"condition":null}]},"257":{"load_device":[{"branch":25,"subroutine":16,"pod":9,"time":null,"statement":130,"condition":2}]},"37":{"BEGIN":[{"time":null,"condition":null,"statement":18,"branch":null,"pod":null,"subroutine":6}]},"797":{"acl_prepare":[{"subroutine":33,"pod":26,"branch":131,"condition":30,"statement":419,"time":null}]},"1357":{"approve":[{"pod":60,"subroutine":67,"branch":178,"statement":713,"condition":40,"time":null}]},"1228":{"get_version":[{"branch":171,"pod":46,"subroutine":53,"time":null,"condition":38,"statement":641}]},"370":{"parse_line":[{"time":null,"condition":4,"statement":185,"branch":45,"subroutine":19,"pod":12}]},"45":{"new":[{"condition":null,"statement":21,"time":null,"pod":null,"subroutine":7,"branch":null}]},"1182":{"abort_cmd":[{"time":null,"condition":38,"statement":623,"branch":167,"pod":40,"subroutine":47}]},"1281":{"con_set_logtype":[{"condition":39,"statement":668,"time":null,"pod":51,"subroutine":58,"branch":176}]},"397":{"parse_config1":[{"statement":196,"condition":4,"time":null,"pod":13,"subroutine":20,"branch":50}]},"299":{"parse_seq":[{"time":null,"condition":3,"statement":148,"branch":27,"subroutine":18,"pod":11}]},"1139":{"cmd_abort_on_error":[{"statement":599,"condition":36,"time":null,"subroutine":45,"pod":38,"branch":162}]},"1110":{"shcmd":[{"branch":159,"pod":35,"subroutine":42,"time":null,"condition":35,"statement":583}]},"861":{"obj_relation":[{"condition":32,"statement":455,"time":null,"subroutine":35,"pod":28,"branch":135}]},"578":{"unique":[{"statement":305,"condition":17,"time":null,"pod":18,"subroutine":25,"branch":88}]},"1313":{"print_change_status":[{"branch":177,"subroutine":62,"pod":55,"time":null,"statement":685,"condition":40}]},"1337":{"compare":[{"pod":58,"subroutine":65,"branch":178,"statement":699,"condition":40,"time":null}]},"206":{"load_raw":[{"condition":2,"statement":97,"time":null,"pod":7,"subroutine":14,"branch":17}]},"1104":{"device_cmd":[{"pod":34,"subroutine":41,"branch":159,"statement":580,"condition":35,"time":null}]},"33":{"BEGIN":[{"branch":null,"subroutine":2,"pod":null,"time":null,"condition":null,"statement":6}]},"584":{"vrf_route_mode":[{"subroutine":26,"pod":19,"branch":88,"condition":17,"statement":308,"time":null}]},"154":{"get_user_password":[{"branch":12,"pod":4,"subroutine":11,"time":null,"statement":66,"condition":2}]},"1373":{"logging":[{"statement":725,"condition":40,"time":null,"pod":61,"subroutine":68,"branch":179}]}},"file":"lib/Netspoc/Approve/Device.pm","pod":[[45,"new"],[66,"get_cw_password"],[86,"match"],[111,"get_aaa_password"],[154,"get_user_password"],[175,"get_spoc_data"],[193,"load_spocfile"],[206,"load_raw"],[246,"load_spoc"],[257,"load_device"],[281,"add_prefix_info"],[299,"parse_seq"],[370,"parse_line"],[397,"parse_config1"],[494,"parse_config"],[504,"merge_rawdata"],[556,"route_line_a_eq_b"],[571,"route_line_destination_a_eq_b"],[578,"unique"],[584,"vrf_route_mode"],[590,"process_routing"],[670,"ports_a_in_b"],[684,"ip_netz_a_in_b"],[697,"services_a_in_b"],[741,"acl_line_a_in_b"],[750,"acl_line_a_eq_b"],[797,"acl_prepare"],[845,"prot_relation"],[861,"obj_relation"],[883,"get_hash_matches"],[903,"acl_array_compare_a_in_b"],[1037,"acl_equal"],[1082,"issue_cmd"],[1092,"cmd"],[1104,"device_cmd"],[1110,"shcmd"],[1116,"cmd_check_echo"],[1125,"get_cmd_output"],[1139,"cmd_abort_on_error"],[1147,"two_cmd"],[1182,"abort_cmd"],[1189,"schedule_reload"],[1194,"cancel_reload"],[1198,"checkidentity"],[1210,"search_banner"],[1215,"checkbanner"],[1228,"get_version"],[1238,"banner_msg"],[1251,"move_logfile"],[1260,"con_setup"],[1268,"con_shutdown"],[1281,"con_set_logtype"],[1290,"prepare_device"],[1300,"mark_as_changed"],[1308,"mark_as_unchanged"],[1313,"print_change_status"],[1325,"found_changes"],[1330,"compare_common"],[1337,"compare"],[1349,"compare_files"],[1357,"approve"],[1373,"logging"],[1408,"lock"],[1423,"unlock"]],"digest":"0ec97875d03dedcfe682a1e77e64ceab","condition":[[115,{"op":"and","left":"$system_user","right":"$self->{'USER'} eq $system_user","type":"and_3"}],[138,{"left":"$count == 2","right":"@lines == 1","type":"and_3","op":"and"}],[288,{"op":"||=","right":"{}","left":"$hash->{$word}","type":"or_2"}],[349,{"left":"$success","right":"$part_success","type":"or_3","op":"||="}],[410,{"right":"$named ne 'from_parser'","left":"$named","type":"and_3","op":"and"}],[438,{"op":"and","left":"$named","right":"$named eq 'from_parser'","type":"and_3"}],[459,{"type":"or_2","right":"{}","left":"$dest->{$x}","op":"||="}],[508,{"type":"and_3","right":"keys %$v","left":"ref $v eq 'HASH'","op":"and"}],[519,{"op":"||=","type":"or_2","right":"{}","left":"$spoc_conf->{$key}"}],[523,{"type":"or_2","right":"[]","left":"$spoc_v->{$vrf}","op":"||="}],[533,{"op":"||=","right":"[]","left":"$spoc_conf->{$key}","type":"or_2"}],[540,{"op":"||=","right":"{}","left":"$spoc_conf->{$key}","type":"or_2"}],[558,{"left":"$a->{'BASE'} == $b->{'BASE'}","right":"$a->{'MASK'} == $b->{'MASK'}","type":"and_3","op":"and"}],[560,{"op":"or","left":"defined $a->{$key}","right":"defined $b->{$key}","type":"or_3"}],[563,{"op":"and","right":"defined $b->{$key}","left":"defined $a->{$key}","type":"and_3"}],[563,{"op":"and","type":"and_3","left":"defined $a->{$key} and defined $b->{$key}","right":"$a->{$key} eq $b->{$key}"}],[572,{"type":"and_3","right":"$a->{'MASK'} == $b->{'MASK'}","left":"$a->{'BASE'} == $b->{'BASE'}","op":"&&"}],[598,{"op":"||=","type":"or_2","right":"[]","left":"$conf_vrf->{$vrf}"}],[671,{"type":"or_3","left":"$a->{'HIGH'} < $b->{'LOW'}","right":"$b->{'HIGH'} < $a->{'LOW'}","op":"or"}],[672,{"op":"and","type":"and_3","left":"$b->{'LOW'} <= $a->{'LOW'}","right":"$a->{'HIGH'} <= $b->{'HIGH'}"}],[714,{"type":"or_3","right":"$bproto eq 'udp'","left":"$bproto eq 'tcp'","op":"or"}],[717,{"op":"and","type":"and_3","left":"$src == 1","right":"$dst == 1"}],[745,{"op":"and","right":"$dst == 1","left":"$src == 1","type":"and_3"}],[745,{"op":"and","type":"and_3","right":"$srv == 1","left":"$src == 1 and $dst == 1"}],[763,{"type":"xor_4","left":"defined $as->{$where}","right":"defined $bs->{$where}","op":"xor"}],[759,{"op":"or","type":"or_3","right":"$a->{'TYPE'} eq 'udp'","left":"$a->{'TYPE'} eq 'tcp'"}],[773,{"op":"or","right":"$aport->{'HIGH'} != $bport->{'HIGH'}","left":"$aport->{'LOW'} != $bport->{'LOW'}","type":"or_3"}],[775,{"op":"xor","left":"$a->{'ESTA'}","right":"$b->{'ESTA'}","type":"xor_4"}],[777,{"left":"$a->{'LOG'}","right":"$b->{'LOG'}","type":"xor_4","op":"xor"}],[778,{"type":"and_3","right":"$a->{'LOG'} ne $b->{'LOG'}","left":"$a->{'LOG'}","op":"and"}],[849,{"op":"or","left":"$a eq $b","right":"$a eq 'ip'","type":"or_3"}],[849,{"op":"or","right":"$b eq 'ip'","left":"$a eq $b or $a eq 'ip'","type":"or_3"}],[989,{"left":"$p->{'LOG'}","right":"$s->{'LOG'}","type":"xor_4","op":"xor"}],[1033,{"type":"and_3","left":"$clean","right":"!$log_mismatch","op":"&&"}],[1071,{"type":"and_3","right":"$oldinnew","left":"$newinold","op":"and"}],[1129,{"right":"$self->handle_reload_banner(\\$out)","left":"$self->{'RELOAD_SCHEDULED'}","type":"and_3","op":"and"}],[1162,{"op":"and","left":"$self->{'RELOAD_SCHEDULED'}","right":"$self->handle_reload_banner(\\$out)","type":"and_3"}],[1171,{"op":"and","type":"and_3","right":"$self->handle_reload_banner(\\$out)","left":"$self->{'RELOAD_SCHEDULED'}"}],[1233,{"op":"||=","right":"'unknown'","left":"$self->{'HARDWARE'}","type":"or_2"}],[1309,{"op":"||=","left":"$self->{'CHANGE'}{$parse_name}","right":"0","type":"or_2"}],[1379,{"op":"and","type":"and_3","right":"not -d $dirname","left":"$dirname"}],[1415,{"op":"or","type":"or_3","left":"$file_exists","right":"chmod 0666, $lockfile"}]],"subroutine":[[31,"BEGIN"],[32,"BEGIN"],[33,"BEGIN"],[34,"BEGIN"],[35,"BEGIN"],[36,"BEGIN"],[37,"BEGIN"],[45,"new"],[66,"get_cw_password"],[86,"match"],[111,"get_aaa_password"],[154,"get_user_password"],[175,"get_spoc_data"],[193,"load_spocfile"],[206,"load_raw"],[246,"load_spoc"],[257,"load_device"],[281,"add_prefix_info"],[299,"parse_seq"],[370,"parse_line"],[397,"parse_config1"],[494,"parse_config"],[504,"merge_rawdata"],[556,"route_line_a_eq_b"],[571,"route_line_destination_a_eq_b"],[578,"unique"],[584,"vrf_route_mode"],[590,"process_routing"],[670,"ports_a_in_b"],[684,"ip_netz_a_in_b"],[697,"services_a_in_b"],[741,"acl_line_a_in_b"],[750,"acl_line_a_eq_b"],[797,"acl_prepare"],[845,"prot_relation"],[861,"obj_relation"],[883,"get_hash_matches"],[903,"acl_array_compare_a_in_b"],[1037,"acl_equal"],[1082,"issue_cmd"],[1092,"cmd"],[1104,"device_cmd"],[1110,"shcmd"],[1116,"cmd_check_echo"],[1125,"get_cmd_output"],[1139,"cmd_abort_on_error"],[1147,"two_cmd"],[1182,"abort_cmd"],[1189,"schedule_reload"],[1194,"cancel_reload"],[1198,"checkidentity"],[1210,"search_banner"],[1215,"checkbanner"],[1228,"get_version"],[1238,"banner_msg"],[1251,"move_logfile"],[1260,"con_setup"],[1268,"con_shutdown"],[1281,"con_set_logtype"],[1290,"prepare_device"],[1300,"mark_as_changed"],[1308,"mark_as_unchanged"],[1313,"print_change_status"],[1325,"found_changes"],[1330,"compare_common"],[1337,"compare"],[1349,"compare_files"],[1357,"approve"],[1373,"logging"],[1408,"lock"],[1423,"unlock"]],"branch":[[67,{"text":"unless my $path = $self->{'CONFIG'}{'passwdpath'}"}],[70,{"text":"unless open my $csv, '<', $path"}],[74,{"text":"if $line =~ /^[;#]/"}],[76,{"text":"unless $line"}],[79,{"text":"@fields >= 9 ? :"}],[78,{"text":"if ($name eq $fields[0])"}],[115,{"text":"unless $system_user and $self->{'USER'} eq $system_user"}],[118,{"text":"unless my $aaa_credential = $self->{'CONFIG'}{'aaa_credentials'}"}],[119,{"text":"unless open my $file, '<', $aaa_credential"}],[138,{"text":"if ($count == 2 and @lines == 1) { }"}],[138,{"text":"elsif ($count != 3) { }"}],[145,{"text":"if (match($pattern, $name))"}],[158,{"text":"unless open my $tty, '>:unix', '/dev/tty'"}],[178,{"text":"unless open my $file, '<', $spocfile"}],[180,{"text":"if ($line =~ /\\[ Model = (\\S+) ]/)"}],[183,{"text":"if ($line =~ /\\[ IP = (\\S+) ]/)"}],[196,{"text":"unless open my $file, '<', $path"}],[210,{"text":"unless open my $file, '<', $raw"}],[209,{"text":"if (-f $raw)"}],[218,{"text":"if ($prepend[$i] =~ /^\\[APPEND\\]\\s*$/)"}],[226,{"text":"if (defined $index)"}],[232,{"text":"if (my $count = @prepend)"}],[236,{"text":"if $msg"}],[235,{"text":"if (my $count = @append)"}],[239,{"text":"if ($msg)"}],[291,{"text":"if (my $subcmd = $parse_info->{$key}{'subcmd'})"}],[295,{"text":"if keys %$result"}],[312,{"text":"if (my $msg = $part->{'error'})"}],[317,{"text":"/^\\$(.*)/ ? :"}],[317,{"text":"$params ? :"}],[321,{"text":"if $parser"}],[330,{"text":"if $parser"}],[332,{"text":"unless (defined $value)"}],[336,{"text":"if (my $key = $part->{'store'})"}],[335,{"text":"if (defined $value)"}],[319,{"text":"if (my $keys = $part->{'store_multi'}) { }"}],[305,{"text":"if (not $ref) { }"}],[305,{"text":"elsif ($ref eq 'HASH') { }"}],[305,{"text":"elsif ($ref eq 'CODE') { }"}],[305,{"text":"elsif ($ref eq 'ARRAY') { }"}],[355,{"text":"if $success"}],[360,{"text":"unless $success"}],[350,{"text":"if ($type eq 'seq') { }"}],[350,{"text":"elsif ($type eq 'or') { }"}],[350,{"text":"elsif ($type eq 'cond1') { }"}],[386,{"text":"unless keys %$result"}],[372,{"text":"if (not $ref) { }"}],[372,{"text":"elsif ($ref eq 'Regexp') { }"}],[372,{"text":"elsif ($ref eq 'CODE') { }"}],[372,{"text":"elsif ($ref eq 'ARRAY') { }"}],[401,{"text":"if (my $msg = $cmd_info->{'error'})"}],[405,{"text":"unless ($cmd_info->{'leave_cmd_as_arg'})"}],[410,{"text":"if ($named and $named ne 'from_parser')"}],[414,{"text":"$_ eq '_cmd' ? :"}],[415,{"text":"$cmd_info->{'params'} ? :"}],[417,{"text":"if $parser"}],[421,{"text":"unless my $parse_info = $cmd_info->{'subcmd'}"}],[424,{"text":"if (defined $value) { }"}],[423,{"text":"if (keys %$value2)"}],[419,{"text":"if (my $subcmds = $arg->{'subcmd'})"}],[432,{"text":"unless (defined $value)"}],[435,{"text":"unless (defined $value)"}],[439,{"text":"unless $name = $value->{'name'}"}],[438,{"text":"if ($named and $named eq 'from_parser')"}],[442,{"text":"if $named"}],[441,{"text":"if (ref $value eq 'HASH')"}],[447,{"text":"ref $store ? :"}],[454,{"text":"if $key eq '_cmd'"}],[449,{"text":"if ($named) { }"}],[458,{"text":"if $x eq '_cmd'"}],[469,{"text":"if $key =~ /(?:name|line|orig)/"}],[471,{"text":"unless $old->{$key} eq $value->{$key}"}],[470,{"text":"if (defined $old->{$key}) { }"}],[467,{"text":"if ($cmd_info->{'merge'}) { }"}],[466,{"text":"if (my $old = $dest->{$key}) { }"}],[462,{"text":"if ($cmd_info->{'multi'}) { }"}],[508,{"text":"unless ref $v eq 'HASH' and keys %$v"}],[507,{"text":"if (my(@keys) = grep({my $v = $raw_append->{$_};\nref $v eq 'ARRAY' unless ref $v eq 'HASH' and keys %$v;} keys %$raw_append))"}],[526,{"text":"$vrf ? :"}],[527,{"text":"if $count"}],[536,{"text":"if $count"}],[544,{"text":"if ($spoc_v->{$name})"}],[550,{"text":"if $count"}],[518,{"text":"if ($key eq 'ROUTING_VRF') { }"}],[518,{"text":"elsif (ref $raw_v eq 'ARRAY') { }"}],[558,{"text":"unless $a->{'BASE'} == $b->{'BASE'} and $a->{'MASK'} == $b->{'MASK'}"}],[563,{"text":"unless defined $a->{$key} and defined $b->{$key} and $a->{$key} eq $b->{$key}"}],[560,{"text":"if (defined $a->{$key} or defined $b->{$key})"}],[600,{"text":"$vrf ? :"}],[599,{"text":"unless ($spoc_routing)"}],[608,{"text":"if ($self->route_line_a_eq_b($c, $s))"}],[622,{"text":"if $r->{'DELETE'}"}],[629,{"text":"if $c->{'DELETE'}"}],[630,{"text":"if ($self->route_line_destination_a_eq_b($r, $c))"}],[639,{"text":"if $r->{'DELETE'}"}],[649,{"text":"if (ref $cmd eq 'ARRAY') { }"}],[643,{"text":"if (@cmds)"}],[671,{"text":"if $a->{'HIGH'} < $b->{'LOW'} or $b->{'HIGH'} < $a->{'LOW'}"}],[672,{"text":"if $b->{'LOW'} <= $a->{'LOW'} and $a->{'HIGH'} <= $b->{'HIGH'}"}],[688,{"text":"if ($m & $a->{'BASE'}) != ($m & $b->{'BASE'})"}],[689,{"text":"if ($am | $bm) == $am"}],[700,{"text":"if ($bproto eq 'ip')"}],[708,{"text":"unless defined $b_spec->{$what}"}],[709,{"text":"unless defined $a_spec->{$what}"}],[710,{"text":"unless $a_spec->{$what} eq $b_spec->{$what}"}],[704,{"text":"if ($bproto eq 'icmp')"}],[715,{"text":"unless my $src = ports_a_in_b($a->{'SRC_PORT'}, $b->{'SRC_PORT'})"}],[716,{"text":"unless my $dst = ports_a_in_b($a->{'DST_PORT'}, $b->{'DST_PORT'})"}],[718,{"text":"unless $b->{'ESTA'}"}],[719,{"text":"if $a->{'ESTA'}"}],[717,{"text":"if ($src == 1 and $dst == 1)"}],[714,{"text":"if ($bproto eq 'tcp' or $bproto eq 'udp')"}],[703,{"text":"if ($bproto eq $aproto) { }"}],[703,{"text":"elsif ($aproto eq 'ip') { }"}],[742,{"text":"unless my $src = $self->ip_netz_a_in_b($a->{'SRC'}, $b->{'SRC'})"}],[743,{"text":"unless my $dst = $self->ip_netz_a_in_b($a->{'DST'}, $b->{'DST'})"}],[744,{"text":"unless my $srv = $self->services_a_in_b($a, $b)"}],[745,{"text":"if $src == 1 and $dst == 1 and $srv == 1"}],[751,{"text":"if $a->{'MODE'} ne $b->{'MODE'}"}],[752,{"text":"if $a->{'TYPE'} ne $b->{'TYPE'}"}],[756,{"text":"if $aobj->{'BASE'} != $bobj->{'BASE'}"}],[757,{"text":"if $aobj->{'MASK'} != $bobj->{'MASK'}"}],[763,{"text":"if defined $as->{$where} xor defined $bs->{$where}"}],[764,{"text":"unless defined $as->{$where}"}],[765,{"text":"if $as->{$where} != $bs->{$where}"}],[773,{"text":"if $aport->{'LOW'} != $bport->{'LOW'} or $aport->{'HIGH'} != $bport->{'HIGH'}"}],[775,{"text":"if $a->{'ESTA'} xor $b->{'ESTA'}"}],[759,{"text":"if ($a->{'TYPE'} eq 'icmp') { }"}],[759,{"text":"elsif ($a->{'TYPE'} eq 'tcp' or $a->{'TYPE'} eq 'udp') { }"}],[777,{"text":"if $a->{'LOG'} xor $b->{'LOG'}"}],[778,{"text":"if $a->{'LOG'} and $a->{'LOG'} ne $b->{'LOG'}"}],[816,{"text":"if (my $unique = $sb2sm2src{$sb}{$sm}) { }"}],[823,{"text":"if (my $unique = $db2dm2dst{$db}{$dm}) { }"}],[830,{"text":"if ($do_acl_hash) { }"}],[849,{"text":"if ($a eq $b or $a eq 'ip' or $b eq 'ip')"}],[868,{"text":"if (($ab & $m) == ($bb & $m))"}],[891,{"text":"if (my $r2_aref = $bhash->{$d})"}],[889,{"text":"if (my $bhash = $bhash->{$s})"}],[887,{"text":"if (my $bhash = $bhash->{$p})"}],[920,{"text":"if ($s->{'MODE'} eq 'deny')"}],[930,{"text":"if ($result == 1) { }"}],[930,{"text":"elsif ($result == 2) { }"}],[970,{"text":"if ($self->acl_line_a_in_b($deny, $cd) == 1)"}],[984,{"text":"if ($deny_match eq 'DMIS')"}],[954,{"text":"if ($p->{'MODE'} eq 'deny') { }"}],[993,{"text":"if ($p->{'LOG'} ne $s->{'LOG'})"}],[989,{"text":"if ($p->{'LOG'} xor $s->{'LOG'}) { }"}],[989,{"text":"elsif ($p->{'LOG'}) { }"}],[997,{"text":"if ($lm)"}],[1004,{"text":"if ($p->{'MODE'} eq 'deny') { }"}],[953,{"text":"if ($result == 1) { }"}],[953,{"text":"elsif ($result == 2) { }"}],[1018,{"text":"if (@perm_int) { }"}],[1017,{"text":"unless ($deny_match eq 'DMIS')"}],[1044,{"text":"if ($self->acl_line_a_eq_b($conf_acl->[$i], $spoc_acl->[$i])) { }"}],[1052,{"text":"unless ($diff)"}],[1040,{"text":"if (@$conf_acl == @$spoc_acl) { }"}],[1071,{"text":"if ($newinold and $oldinnew) { }"}],[1094,{"text":"if ($self->{'COMPARE'}) { }"}],[1117,{"text":"if ($echo ne $cmd)"}],[1129,{"text":"if $self->{'RELOAD_SCHEDULED'} and $self->handle_reload_banner(\\$out)"}],[1134,{"text":"if $need_reload"}],[1140,{"text":"if ($self->cmd_check_error($cmd, $lines))"}],[1162,{"text":"if $self->{'RELOAD_SCHEDULED'} and $self->handle_reload_banner(\\$out)"}],[1171,{"text":"if $self->{'RELOAD_SCHEDULED'} and $self->handle_reload_banner(\\$out)"}],[1177,{"text":"if $need_reload"}],[1149,{"text":"if ($self->{'COMPARE'}) { }"}],[1205,{"text":"unless $name eq $conf_name"}],[1216,{"text":"unless my $check = $self->{'CONFIG'}{'checkbanner'}"}],[1218,{"text":"if ($self->{'COMPARE'}) { }"}],[1217,{"text":"if (not $self->search_banner($check))"}],[1230,{"text":"unless (defined $self->{'VERSION'})"}],[1254,{"text":"unless system(\"mv $logfile $logfile.$date\") == 0"}],[1252,{"text":"if (-f $logfile)"}],[1261,{"text":"if $self->{'CONSOLE'}"}],[1272,{"text":"unless ($con->{'RESULT'}{'ERROR'})"}],[1282,{"text":"unless my $logdir = $self->{'OPTS'}{'L'}"}],[1315,{"text":"if ($self->{'CHANGE'}{$key}) { }"}],[1364,{"text":"if ($self->found_changes)"}],[1375,{"text":"unless my $logfile = $self->{'OPTS'}{'LOGFILE'}"}],[1381,{"text":"unless defined chmod(0755, $dirname)"}],[1380,{"text":"if (mkdir $dirname, 493) { }"}],[1380,{"text":"elsif (not -d $dirname) { }"}],[1379,{"text":"if ($dirname and not -d $dirname)"}],[1394,{"text":"unless open STDOUT, '>', $logfile"}],[1395,{"text":"unless chmod 0644, $logfile"}],[1397,{"text":"unless open STDERR, '>&STDOUT'"}],[1411,{"text":"unless open $lock_fh, '>', $lockfile"}],[1415,{"text":"unless $file_exists or chmod 0666, $lockfile"}],[1418,{"text":"unless flock $lock_fh, 6"}],[1424,{"text":"unless close $lock_fh"}]]}