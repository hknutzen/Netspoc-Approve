{"condition":[[295,{"right":"$self->SUPER::parse_address($arg)","type":"or_3","op":"||","left":"$self->parse_object_group($arg)"}],[310,{"left":"$entry->{'VRF'}","right":"''","type":"or_2","op":"||"}],[323,{"left":"ref $what","op":"&&","right":"$what->{'GROUP_NAME'}","type":"and_3"}],[637,{"left":"$prefix =~ / \\n $/msx","op":"and","type":"and_3","right":"$postfix eq '\\\\r\\\\n'"}],[637,{"right":"$postfix =~ /^ [\\r\\n]* $/sx","type":"and_3","op":"and","left":"not $prefix"}],[671,{"op":"||","right":"'1.2.3.4'","type":"or_2","left":"$self->{'IP'}"}],[690,{"right":"not $self->{'COMPARE'}","type":"and_3","op":"and","left":"$self->check_conf_mode"}],[705,{"left":"$self->check_conf_mode","type":"and_3","right":"not $self->{'COMPARE'}","op":"and"}],[732,{"type":"or_3","right":"$proto eq '51'","op":"or","left":"$proto eq '50'"}],[737,{"op":"&&","right":"$self->services_a_in_b($device_proto, $conf_entry)","type":"and_3","left":"$self->ip_netz_a_in_b($device_src, $conf_entry->{'SRC'}) && $self->ip_netz_a_in_b($device_dst, $conf_entry->{'DST'})"}]],"statement":[30,30,30,31,31,31,32,32,32,33,33,33,34,34,34,65,66,273,274,274,275,275,276,276,277,279,283,284,285,288,293,295,299,300,304,307,308,309,309,310,311,311,313,317,318,319,320,320,321,322,323,324,327,332,333,334,336,337,338,343,344,345,346,346,347,348,349,350,353,354,355,362,362,363,364,369,370,379,382,383,384,388,389,406,407,409,410,410,411,412,415,415,416,417,418,421,423,427,428,429,430,432,433,439,440,443,448,449,451,452,455,456,461,462,463,464,467,468,471,472,473,491,492,495,496,497,498,499,500,503,506,507,510,512,513,514,515,518,521,522,523,526,528,532,538,539,541,542,543,544,545,548,549,553,557,558,559,563,567,568,574,575,576,579,585,586,587,588,589,590,593,594,595,598,612,619,629,630,631,632,637,638,645,646,647,648,649,654,658,663,664,665,669,670,671,672,673,676,677,689,690,691,692,693,694,695,696,699,701,704,705,706,707,708,709,710,713,715,716,717,718,719,722,723,727,728,731,732,734,737,742,743,752,753,754,755,759,760,761,762,763,766,771,774,775,776,777,778,781,784,785,788,789,790,794,795,796,797,799,802,806,807,809,810,813,814,815,816,817,818,819,820,822,824,825,826,828,829,830,839,840,841],"file":"lib/Netspoc/Approve/IOS.pm","digest":"0459cc3e2e645933a5fd8c7cd65ee83b","subroutine":[[30,"BEGIN"],[31,"BEGIN"],[32,"BEGIN"],[33,"BEGIN"],[34,"BEGIN"],[65,"get_parse_info"],[283,"parse_object_group"],[293,"parse_address"],[299,"adjust_mask"],[304,"postprocess_config"],[379,"get_identity"],[388,"get_config_from_device"],[406,"cmd_check_error"],[427,"parse_version"],[439,"set_terminal"],[448,"prepare_device"],[491,"write_mem"],[538,"schedule_reload"],[567,"cancel_reload"],[612,"handle_reload_banner"],[663,"get_my_connection"],[727,"is_device_access"],[742,"resequence_cmd"],[752,"compare_crypto_maps"],[806,"crypto_processing"],[839,"transfer"]],"start":{"406":{"cmd_check_error":[{"statement":83,"condition":3,"branch":16,"subroutine":12,"time":null}]},"663":{"get_my_connection":[{"statement":189,"condition":5,"subroutine":20,"time":null,"branch":37}]},"388":{"get_config_from_device":[{"statement":81,"condition":3,"branch":16,"subroutine":11,"time":null}]},"30":{"BEGIN":[{"condition":null,"statement":null,"branch":null,"time":null,"subroutine":null}]},"293":{"parse_address":[{"statement":30,"condition":null,"branch":1,"subroutine":7,"time":null}]},"33":{"BEGIN":[{"statement":9,"condition":null,"branch":null,"subroutine":3,"time":null}]},"379":{"get_identity":[{"statement":77,"condition":3,"branch":16,"subroutine":10,"time":null}]},"-1":{"__COVER__":[{"subroutine":26,"time":null,"branch":57,"statement":282,"condition":10}]},"304":{"postprocess_config":[{"branch":1,"subroutine":9,"time":null,"statement":34,"condition":1}]},"34":{"BEGIN":[{"condition":null,"statement":12,"time":null,"subroutine":4,"branch":null}]},"448":{"prepare_device":[{"statement":106,"condition":3,"subroutine":15,"time":null,"branch":20}]},"491":{"write_mem":[{"subroutine":16,"time":null,"branch":22,"statement":121,"condition":3}]},"427":{"parse_version":[{"condition":3,"statement":97,"branch":18,"time":null,"subroutine":13}]},"742":{"resequence_cmd":[{"branch":48,"time":null,"subroutine":22,"condition":10,"statement":230}]},"567":{"cancel_reload":[{"condition":3,"statement":158,"branch":31,"time":null,"subroutine":18}]},"727":{"is_device_access":[{"condition":8,"statement":224,"branch":46,"time":null,"subroutine":21}]},"32":{"BEGIN":[{"branch":null,"subroutine":2,"time":null,"statement":6,"condition":null}]},"31":{"BEGIN":[{"statement":3,"condition":null,"branch":null,"subroutine":1,"time":null}]},"439":{"set_terminal":[{"time":null,"subroutine":14,"branch":20,"condition":3,"statement":103}]},"612":{"handle_reload_banner":[{"branch":34,"subroutine":19,"time":null,"statement":174,"condition":3}]},"538":{"schedule_reload":[{"time":null,"subroutine":17,"branch":28,"condition":3,"statement":144}]},"806":{"crypto_processing":[{"condition":10,"statement":260,"time":null,"subroutine":24,"branch":53}]},"299":{"adjust_mask":[{"statement":32,"condition":1,"subroutine":8,"time":null,"branch":1}]},"839":{"transfer":[{"statement":279,"condition":10,"subroutine":25,"time":null,"branch":57}]},"283":{"parse_object_group":[{"statement":26,"condition":null,"branch":null,"subroutine":6,"time":null}]},"65":{"get_parse_info":[{"condition":null,"statement":15,"time":null,"subroutine":5,"branch":null}]},"752":{"compare_crypto_maps":[{"branch":48,"subroutine":23,"time":null,"statement":232,"condition":10}]}},"branch":[[284,{"text":"if (check_regex('object-group', $arg)) { }"}],[313,{"text":"if keys %$hash"}],[307,{"text":"if ($p->{'ROUTING'})"}],[323,{"text":"unless my $group_name = ref $what && $what->{'GROUP_NAME'}"}],[324,{"text":"unless my $group = $object_groups->{$group_name}"}],[336,{"text":"unless my $num = $entry->{'V_INTERFACE'}"}],[338,{"text":"unless $p->{'IF'}{$intf}"}],[332,{"text":"if (my $ezvpn = $p->{'CRYPTO_IPSEC_CLIENT_EZVPN'})"}],[349,{"text":"if $entry->{'GDOI'}"}],[354,{"text":"unless my $acl_name = $$entry{\"ACCESS_GROUP_$what\"}"}],[355,{"text":"unless $p->{'ACCESS_LIST'}{$acl_name}"}],[343,{"text":"if (my $crypto_maps = $p->{'CRYPTO_MAP'})"}],[364,{"text":"unless $p->{'CRYPTO_MAP'}{$imap}"}],[370,{"text":"unless $p->{'CRYPTO_IPSEC_CLIENT_EZVPN'}{$ezvpn}"}],[363,{"text":"if (my $imap = $intf->{'CRYPTO_MAP'}) { }"}],[363,{"text":"elsif ($intf->{'EZVPN'}) { }"}],[411,{"text":"if ($line =~ /$regex/)"}],[416,{"text":"if ($line =~ /$regex/)"}],[429,{"text":"if ($output =~ /Software .* Version +(\\d+\\.\\d+[\\w\\d\\(\\)]+)/)"}],[432,{"text":"if ($output =~ /(cisco\\s+\\S+) .*memory/i)"}],[462,{"text":"if @$lines"}],[451,{"text":"unless ($self->{'COMPARE'})"}],[510,{"text":"unless $lines->[0]"}],[503,{"text":"if ($lines->[-1] =~ /Overwrite the previous NVRAM configuration/)"}],[513,{"text":"if ($lines->[-1] =~ /\\[OK\\]/) { }"}],[522,{"text":"if (not $retries) { }"}],[512,{"text":"if ($lines->[0] =~ /^Building configuration/) { }"}],[512,{"text":"elsif (grep {$_ =~ /startup-config file open failed/i;} @$lines) { }"}],[539,{"text":"if $self->{'COMPARE'}"}],[544,{"text":"if $self->check_conf_mode"}],[548,{"text":"if ($out =~ /save/i)"}],[568,{"text":"unless $self->{'RELOAD_SCHEDULED'}"}],[574,{"text":"if ($force)"}],[588,{"text":"if $self->check_conf_mode"}],[637,{"text":"if ($prefix =~ / \\n $/msx and $postfix eq '\\\\r\\\\n') { }"}],[637,{"text":"elsif (not $prefix and $postfix =~ /^ [\\r\\n]* $/sx) { }"}],[619,{"text":"if ($$output_ref =~ /\n\f\t^ (.*?)\t\t       # Prefix from original command\n\f  \t(?:\\r\\n{1,2}){3}       # 3 empty lines\n\f  \t\\x07 [*]{3}\\r\\n        # BELL + ***\n\f  \t[*]{3} ([^\\r\\n]+) \\r\\n # *** Message\n\f  \t[*]{3}\\r\\n             # ***\n\f\t(.*) $                 # Postfix from original command\n\f \t/sx)"}],[664,{"text":"if (my $cached = $self->{'CONNECTION'})"}],[672,{"text":"$ip ? :"}],[669,{"text":"unless ($self->{'CONSOLE'})"}],[690,{"text":"if $self->check_conf_mode and not $self->{'COMPARE'}"}],[695,{"text":"if ($line =~ /^\\*\\D*(\\d+).*?([\\d.]+)$/) { }"}],[701,{"text":"unless my $src_ip = quad2int($s_ip)"}],[705,{"text":"if $self->check_conf_mode and not $self->{'COMPARE'}"}],[709,{"text":"if ($line =~ /Local host:\\s([\\d.]+),\\sLocal port:\\s(\\d+)/i) { }"}],[715,{"text":"unless my $dst_ip = quad2int($d_ip)"}],[728,{"text":"if $conf_entry->{'MODE'} eq 'deny'"}],[732,{"text":"if $proto eq '50' or $proto eq '51'"}],[753,{"text":"if (@$conf_map != @$spoc_map)"}],[777,{"text":"unless my $sequ = $entry->{'SEQU'}"}],[781,{"text":"if ($spoc_acl)"}],[795,{"text":"unless ($spoc_acl)"}],[794,{"text":"if ($conf_acl)"}],[807,{"text":"unless $spoc->{'CRYPTO_MAP'}"}],[819,{"text":"if ($conf_map_name)"}],[818,{"text":"unless ($spoc_map_name)"}],[824,{"text":"unless ($conf_map_name)"}]]}