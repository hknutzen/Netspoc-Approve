{"statement":[30,30,30,31,31,31,32,32,32,33,33,33,34,34,34,65,66,272,273,273,274,274,275,275,276,278,282,283,284,287,292,294,298,299,303,305,306,307,311,312,313,313,314,315,315,317,321,322,323,324,324,325,326,327,328,331,336,336,337,338,339,340,343,348,349,350,351,354,359,360,363,364,364,365,366,367,369,370,370,371,372,373,374,377,378,379,387,388,388,389,390,391,393,397,398,399,402,406,414,417,418,419,423,424,441,442,444,445,445,446,447,450,450,451,452,453,456,458,462,463,464,465,467,468,474,475,478,483,484,486,487,490,491,496,497,498,499,502,503,506,507,508,519,520,523,524,525,526,527,528,529,530,531,534,528,538,539,542,544,548,554,555,557,558,559,560,561,564,565,569,573,574,575,579,583,584,590,591,592,595,601,602,603,604,605,606,609,610,611,614,628,635,645,646,647,648,653,654,661,662,663,664,665,670,674,679,680,681,685,686,687,688,689,692,693,705,706,707,708,709,710,711,712,715,717,720,721,722,723,724,725,726,729,731,732,733,734,735,738,739,743,744,745,747,753,754,762,763,764,765,766,767,768,769,770,771,777,780,781,782,783,786,787,788,789,790,794,795,796,797,798,799,801,808,809,810,811,813,814,815,816,819,823,825,826,828,829,832,833,834,835,836,837,838,839,840,842,844,845,846,847,849,850,851,861,862,863],"digest":"74b7fede5994fc5f2991372efae726c4","condition":[[294,{"right":"$self->SUPER::parse_address($arg)","left":"$self->parse_object_group($arg)","op":"||","type":"or_3"}],[314,{"right":"''","op":"||","left":"$$entry{'VRF'}","type":"or_2"}],[327,{"op":"&&","left":"ref $what","type":"and_3","right":"$$what{'GROUP_NAME'}"}],[359,{"right":"$ezvpn_client_found","type":"and_3","op":"and","left":"$crypto_map_found"}],[653,{"right":"$postfix eq '\\\\r\\\\n'","type":"and_3","left":"$prefix =~ / \\n $/msx","op":"and"}],[653,{"right":"$postfix =~ /^ [\\r\\n]* $/sx","op":"and","left":"not $prefix","type":"and_3"}],[687,{"right":"'1.2.3.4'","left":"$$self{'IP'}","op":"||","type":"or_2"}],[706,{"right":"not $$self{'COMPARE'}","op":"and","left":"$self->check_conf_mode","type":"and_3"}],[721,{"right":"not $$self{'COMPARE'}","type":"and_3","op":"and","left":"$self->check_conf_mode"}],[747,{"op":"&&","left":"$self->ip_netz_a_in_b($device_src, $$conf_entry{'SRC'}) && $self->ip_netz_a_in_b($device_dst, $$conf_entry{'DST'})","type":"and_3","right":"$self->services_a_in_b($device_proto, $conf_entry)"}],[766,{"type":"or_2","op":"||","left":"$$conf_entry{$attr}","right":"''"}],[767,{"right":"''","op":"||","left":"$$spoc_entry{$attr}","type":"or_2"}],[770,{"right":"$spoc_acl","type":"and_3","op":"and","left":"$conf_acl"}]],"subroutine":[[30,"BEGIN"],[31,"BEGIN"],[32,"BEGIN"],[33,"BEGIN"],[34,"BEGIN"],[65,"get_parse_info"],[282,"parse_object_group"],[292,"parse_address"],[298,"adjust_mask"],[303,"postprocess_config"],[414,"get_identity"],[423,"get_config_from_device"],[441,"cmd_check_error"],[462,"parse_version"],[474,"set_terminal"],[483,"prepare_device"],[519,"write_mem"],[554,"schedule_reload"],[583,"cancel_reload"],[628,"handle_reload_banner"],[679,"get_my_connection"],[743,"is_device_access"],[753,"resequence_cmd"],[762,"compare_crypto_map_entries"],[808,"compare_crypto_maps"],[823,"crypto_processing"],[861,"transfer"]],"pod":[[65,"get_parse_info"],[282,"parse_object_group"],[292,"parse_address"],[298,"adjust_mask"],[303,"postprocess_config"],[414,"get_identity"],[423,"get_config_from_device"],[441,"cmd_check_error"],[462,"parse_version"],[474,"set_terminal"],[483,"prepare_device"],[519,"write_mem"],[554,"schedule_reload"],[583,"cancel_reload"],[628,"handle_reload_banner"],[679,"get_my_connection"],[743,"is_device_access"],[753,"resequence_cmd"],[762,"compare_crypto_map_entries"],[808,"compare_crypto_maps"],[823,"crypto_processing"],[861,"transfer"]],"branch":[[283,{"text":"if (check_regex('object-group', $arg)) { }"}],[317,{"text":"if keys %$hash"}],[311,{"text":"if ($$p{'ROUTING'})"}],[327,{"text":"unless my $group_name = ref $what && $$what{'GROUP_NAME'}"}],[328,{"text":"unless my $group = $$object_groups{$group_name}"}],[339,{"text":"if (my $map = $$p{'CRYPTO_MAP'}{$imap}) { }"}],[350,{"text":"if (my $def = $$p{'CRYPTO_IPSEC_CLIENT_EZVPN'}{$ezvpn}) { }"}],[337,{"text":"if (my $imap = $$intf{'CRYPTO_MAP'}) { }"}],[337,{"text":"elsif ($$intf{'EZVPN'}) { }"}],[359,{"text":"if ($crypto_map_found and $ezvpn_client_found)"}],[365,{"text":"unless ($map_used{$cm_name})"}],[373,{"text":"if $$entry{'GDOI'}"}],[379,{"text":"unless $$p{'ACCESS_LIST'}{$acl_name}"}],[378,{"text":"if (my $acl_name = $$entry{\"ACCESS_GROUP_$what\"})"}],[389,{"text":"unless ($ezvpn_used{$ez_name})"}],[399,{"text":"if ($$p{'IF'}{$intf}) { }"}],[397,{"text":"if (my $num = $$entry{'V_INTERFACE'}) { }"}],[363,{"text":"if ($crypto_map_found) { }"}],[363,{"text":"elsif ($ezvpn_client_found) { }"}],[446,{"text":"if ($line =~ /$regex/)"}],[451,{"text":"if ($line =~ /$regex/)"}],[464,{"text":"if ($output =~ /Software .* Version +(\\d+\\.\\d+[\\w\\d\\(\\)]+)/)"}],[467,{"text":"if ($output =~ /(cisco\\s+\\S+) .*memory/i)"}],[497,{"text":"if @$lines"}],[486,{"text":"unless ($$self{'COMPARE'})"}],[529,{"text":"if ($$lines[-1] =~ /\\[OK\\]/) { }"}],[538,{"text":"if (not $retries) { }"}],[528,{"text":"if ($$lines[0] =~ /^Building configuration/) { }"}],[528,{"text":"elsif (grep {$_ =~ /startup-config file open failed/i;} @$lines) { }"}],[555,{"text":"if $$self{'COMPARE'}"}],[560,{"text":"if $self->check_conf_mode"}],[564,{"text":"if ($out =~ /save/i)"}],[584,{"text":"unless $$self{'RELOAD_SCHEDULED'}"}],[590,{"text":"if ($force)"}],[604,{"text":"if $self->check_conf_mode"}],[653,{"text":"if ($prefix =~ / \\n $/msx and $postfix eq '\\\\r\\\\n') { }"}],[653,{"text":"elsif (not $prefix and $postfix =~ /^ [\\r\\n]* $/sx) { }"}],[635,{"text":"if ($$output_ref =~ /\n\f\t^ (.*?)\t\t       # Prefix from original command\n\f  \t(?:\\r\\n{1,2}){3}       # 3 empty lines\n\f  \t\\x07 [*]{3}\\r\\n        # BELL + ***\n\f  \t[*]{3} ([^\\r\\n]+) \\r\\n # *** Message\n\f  \t[*]{3}\\r\\n             # ***\n\f\t(.*) $                 # Postfix from original command\n\f \t/sx)"}],[680,{"text":"if (my $cached = $$self{'CONNECTION'})"}],[688,{"text":"$ip ? :"}],[685,{"text":"unless ($$self{'CONSOLE'})"}],[706,{"text":"if $self->check_conf_mode and not $$self{'COMPARE'}"}],[711,{"text":"if ($line =~ /^\\*\\D*(\\d+).*?([\\d.]+)$/) { }"}],[717,{"text":"unless my $src_ip = quad2int($s_ip)"}],[721,{"text":"if $self->check_conf_mode and not $$self{'COMPARE'}"}],[725,{"text":"if ($line =~ /Local host:\\s([\\d.]+),\\sLocal port:\\s(\\d+)/i) { }"}],[731,{"text":"unless my $dst_ip = quad2int($d_ip)"}],[744,{"text":"if $$conf_entry{'MODE'} eq 'deny'"}],[763,{"text":"unless my $sequ = $$conf_entry{'SEQU'}"}],[771,{"text":"if $self->acl_equal($$conf_acl{'LIST'}, $$spoc_acl{'LIST'}, $confacl_name, $spocacl_name, $attr)"}],[770,{"text":"if ($conf_acl and $spoc_acl)"}],[777,{"text":"if ($spoc_acl)"}],[795,{"text":"unless ($spoc_acl)"}],[794,{"text":"if ($conf_acl)"}],[809,{"text":"if (@$conf_map != @$spoc_map)"}],[838,{"text":"if ($conf_map_name)"}],[837,{"text":"unless ($spoc_map_name)"}],[844,{"text":"unless ($conf_map_name)"}],[825,{"text":"if ($$spoc{'CRYPTO_MAP'})"}]],"file":"lib/Netspoc/Approve/IOS.pm","start":{"32":{"BEGIN":[{"condition":null,"branch":null,"pod":null,"statement":6,"subroutine":2,"time":null}]},"628":{"handle_reload_banner":[{"time":null,"branch":35,"condition":4,"subroutine":19,"pod":14,"statement":190}]},"474":{"set_terminal":[{"subroutine":14,"statement":124,"pod":9,"branch":23,"condition":4,"time":null}]},"679":{"get_my_connection":[{"time":null,"pod":15,"statement":205,"subroutine":20,"condition":6,"branch":38}]},"30":{"BEGIN":[{"time":null,"subroutine":null,"pod":null,"statement":null,"branch":null,"condition":null}]},"423":{"get_config_from_device":[{"statement":102,"pod":6,"subroutine":11,"condition":4,"branch":19,"time":null}]},"303":{"postprocess_config":[{"time":null,"branch":1,"condition":1,"subroutine":9,"statement":34,"pod":4}]},"65":{"get_parse_info":[{"time":null,"pod":null,"statement":15,"subroutine":5,"condition":null,"branch":null}]},"298":{"adjust_mask":[{"time":null,"statement":32,"pod":3,"subroutine":8,"condition":1,"branch":1}]},"292":{"parse_address":[{"time":null,"branch":1,"condition":null,"subroutine":7,"pod":2,"statement":30}]},"33":{"BEGIN":[{"time":null,"pod":null,"statement":9,"subroutine":3,"condition":null,"branch":null}]},"743":{"is_device_access":[{"subroutine":21,"statement":240,"pod":16,"branch":47,"condition":9,"time":null}]},"861":{"transfer":[{"time":null,"subroutine":26,"pod":21,"statement":304,"branch":59,"condition":13}]},"462":{"parse_version":[{"time":null,"condition":4,"branch":21,"statement":118,"pod":8,"subroutine":13}]},"282":{"parse_object_group":[{"time":null,"branch":null,"condition":null,"subroutine":6,"statement":26,"pod":1}]},"583":{"cancel_reload":[{"time":null,"condition":4,"branch":32,"pod":13,"statement":174,"subroutine":18}]},"34":{"BEGIN":[{"time":null,"condition":null,"branch":null,"statement":12,"pod":null,"subroutine":4}]},"554":{"schedule_reload":[{"subroutine":17,"statement":160,"pod":12,"branch":29,"condition":4,"time":null}]},"823":{"crypto_processing":[{"time":null,"subroutine":25,"pod":20,"statement":282,"branch":55,"condition":13}]},"414":{"get_identity":[{"time":null,"branch":19,"condition":4,"subroutine":10,"pod":5,"statement":98}]},"519":{"write_mem":[{"condition":4,"branch":25,"pod":11,"statement":142,"subroutine":16,"time":null}]},"31":{"BEGIN":[{"time":null,"subroutine":1,"statement":3,"pod":null,"branch":null,"condition":null}]},"808":{"compare_crypto_maps":[{"time":null,"statement":273,"pod":19,"subroutine":24,"condition":13,"branch":54}]},"441":{"cmd_check_error":[{"time":null,"condition":4,"branch":19,"statement":104,"pod":7,"subroutine":12}]},"762":{"compare_crypto_map_entries":[{"branch":48,"condition":10,"subroutine":23,"statement":246,"pod":18,"time":null}]},"-1":{"__COVER__":[{"subroutine":27,"statement":307,"pod":22,"branch":59,"condition":13,"time":null}]},"483":{"prepare_device":[{"subroutine":15,"statement":127,"pod":10,"branch":23,"condition":4,"time":null}]},"753":{"resequence_cmd":[{"statement":244,"pod":17,"subroutine":22,"condition":10,"branch":48,"time":null}]}}}