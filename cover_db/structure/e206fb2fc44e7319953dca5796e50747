{"subroutine":[[31,"BEGIN"],[32,"BEGIN"],[33,"BEGIN"],[34,"BEGIN"],[35,"BEGIN"],[36,"BEGIN"],[37,"BEGIN"],[45,"new"],[55,"match"],[76,"get_aaa_password"],[114,"get_user_password"],[135,"get_spoc_data"],[153,"load_spocfile"],[166,"load_raw"],[206,"load_spoc"],[217,"load_device"],[241,"add_prefix_info"],[259,"parse_seq"],[330,"parse_line"],[357,"parse_config1"],[454,"parse_config"],[464,"merge_rawdata"],[516,"route_line_a_eq_b"],[531,"route_line_destination_a_eq_b"],[538,"unique"],[544,"vrf_route_mode"],[550,"process_routing"],[630,"ports_a_in_b"],[644,"ip_netz_a_in_b"],[657,"services_a_in_b"],[701,"acl_line_a_in_b"],[710,"acl_line_a_eq_b"],[757,"acl_prepare"],[805,"prot_relation"],[821,"obj_relation"],[843,"get_hash_matches"],[863,"acl_array_compare_a_in_b"],[997,"acl_equal"],[1042,"issue_cmd"],[1052,"cmd"],[1064,"device_cmd"],[1070,"shcmd"],[1076,"cmd_check_echo"],[1085,"get_cmd_output"],[1099,"cmd_abort_on_error"],[1107,"two_cmd"],[1142,"abort_cmd"],[1149,"schedule_reload"],[1154,"cancel_reload"],[1158,"checkidentity"],[1170,"search_banner"],[1175,"checkbanner"],[1188,"get_version"],[1198,"banner_msg"],[1211,"move_logfile"],[1220,"con_setup"],[1228,"con_shutdown"],[1241,"con_set_logtype"],[1250,"prepare_device"],[1260,"mark_as_changed"],[1268,"mark_as_unchanged"],[1273,"print_change_status"],[1285,"found_changes"],[1290,"compare_common"],[1297,"compare"],[1309,"compare_files"],[1317,"approve"],[1333,"logging"],[1368,"lock"],[1383,"unlock"]],"condition":[[80,{"right":"$self->{'USER'} eq $system_user","left":"$system_user","op":"and","type":"and_3"}],[248,{"op":"||=","type":"or_2","left":"$hash->{$word}","right":"{}"}],[309,{"op":"||=","type":"or_3","right":"$part_success","left":"$success"}],[370,{"op":"and","type":"and_3","right":"$named ne 'from_parser'","left":"$named"}],[398,{"right":"$named eq 'from_parser'","left":"$named","op":"and","type":"and_3"}],[419,{"right":"{}","left":"$dest->{$x}","op":"||=","type":"or_2"}],[468,{"right":"keys %$v","left":"ref $v eq 'HASH'","op":"and","type":"and_3"}],[479,{"type":"or_2","op":"||=","left":"$spoc_conf->{$key}","right":"{}"}],[483,{"op":"||=","type":"or_2","left":"$spoc_v->{$vrf}","right":"[]"}],[493,{"type":"or_2","op":"||=","left":"$spoc_conf->{$key}","right":"[]"}],[500,{"op":"||=","type":"or_2","right":"{}","left":"$spoc_conf->{$key}"}],[518,{"type":"and_3","op":"and","right":"$a->{'MASK'} == $b->{'MASK'}","left":"$a->{'BASE'} == $b->{'BASE'}"}],[520,{"type":"or_3","op":"or","left":"defined $a->{$key}","right":"defined $b->{$key}"}],[523,{"op":"and","type":"and_3","right":"defined $b->{$key}","left":"defined $a->{$key}"}],[523,{"left":"defined $a->{$key} and defined $b->{$key}","right":"$a->{$key} eq $b->{$key}","op":"and","type":"and_3"}],[532,{"type":"and_3","op":"&&","left":"$a->{'BASE'} == $b->{'BASE'}","right":"$a->{'MASK'} == $b->{'MASK'}"}],[558,{"op":"||=","type":"or_2","right":"[]","left":"$conf_vrf->{$vrf}"}],[631,{"type":"or_3","op":"or","right":"$b->{'HIGH'} < $a->{'LOW'}","left":"$a->{'HIGH'} < $b->{'LOW'}"}],[632,{"op":"and","type":"and_3","right":"$a->{'HIGH'} <= $b->{'HIGH'}","left":"$b->{'LOW'} <= $a->{'LOW'}"}],[674,{"right":"$bproto eq 'udp'","left":"$bproto eq 'tcp'","op":"or","type":"or_3"}],[677,{"type":"and_3","op":"and","right":"$dst == 1","left":"$src == 1"}],[705,{"op":"and","type":"and_3","left":"$src == 1","right":"$dst == 1"}],[705,{"left":"$src == 1 and $dst == 1","right":"$srv == 1","op":"and","type":"and_3"}],[723,{"left":"defined $as->{$where}","right":"defined $bs->{$where}","op":"xor","type":"xor_4"}],[719,{"right":"$a->{'TYPE'} eq 'udp'","left":"$a->{'TYPE'} eq 'tcp'","op":"or","type":"or_3"}],[733,{"right":"$aport->{'HIGH'} != $bport->{'HIGH'}","left":"$aport->{'LOW'} != $bport->{'LOW'}","op":"or","type":"or_3"}],[735,{"right":"$b->{'ESTA'}","left":"$a->{'ESTA'}","op":"xor","type":"xor_4"}],[737,{"type":"xor_4","op":"xor","left":"$a->{'LOG'}","right":"$b->{'LOG'}"}],[738,{"op":"and","type":"and_3","right":"$a->{'LOG'} ne $b->{'LOG'}","left":"$a->{'LOG'}"}],[809,{"left":"$a eq $b","right":"$a eq 'ip'","type":"or_3","op":"or"}],[809,{"left":"$a eq $b or $a eq 'ip'","right":"$b eq 'ip'","type":"or_3","op":"or"}],[949,{"right":"$s->{'LOG'}","left":"$p->{'LOG'}","type":"xor_4","op":"xor"}],[993,{"type":"and_3","op":"&&","right":"!$log_mismatch","left":"$clean"}],[1031,{"right":"$oldinnew","left":"$newinold","type":"and_3","op":"and"}],[1089,{"left":"$self->{'RELOAD_SCHEDULED'}","right":"$self->handle_reload_banner(\\$out)","op":"and","type":"and_3"}],[1122,{"type":"and_3","op":"and","right":"$self->handle_reload_banner(\\$out)","left":"$self->{'RELOAD_SCHEDULED'}"}],[1131,{"type":"and_3","op":"and","right":"$self->handle_reload_banner(\\$out)","left":"$self->{'RELOAD_SCHEDULED'}"}],[1193,{"type":"or_2","op":"||=","right":"'unknown'","left":"$self->{'HARDWARE'}"}],[1269,{"right":"0","left":"$self->{'CHANGE'}{$parse_name}","type":"or_2","op":"||="}],[1339,{"right":"not -d $dirname","left":"$dirname","type":"and_3","op":"and"}],[1375,{"op":"or","type":"or_3","left":"$file_exists","right":"chmod 0666, $lockfile"}]],"digest":"e206fb2fc44e7319953dca5796e50747","statement":[31,31,31,32,32,32,33,33,33,34,34,34,35,35,35,36,36,36,37,37,37,45,46,47,55,58,61,62,64,76,77,78,79,80,83,84,86,87,90,91,92,93,97,97,99,100,101,102,105,106,107,110,114,115,118,119,121,122,123,124,125,126,127,128,135,136,138,139,140,141,143,144,145,148,149,153,154,156,157,158,160,161,162,166,167,168,169,170,171,172,176,177,178,179,180,185,186,187,188,190,192,193,195,196,197,199,200,202,206,207,208,209,210,211,212,213,217,218,219,220,221,222,241,242,243,244,245,246,247,248,249,251,252,255,259,260,261,262,262,263,264,265,269,272,273,275,276,277,277,279,280,281,283,284,286,289,290,292,293,295,296,297,299,304,307,309,310,315,320,323,326,330,331,332,335,338,341,344,345,346,347,350,357,358,359,360,361,362,364,365,366,368,369,370,371,373,375,374,375,376,377,378,379,381,382,383,384,385,388,392,393,395,396,398,399,401,402,403,404,406,407,408,409,410,413,414,416,417,418,419,420,422,423,423,426,427,428,429,430,431,436,441,446,450,454,456,457,458,459,460,464,465,466,467,467,468,471,472,475,476,478,479,480,481,482,483,484,485,486,487,493,494,495,496,500,501,502,503,504,505,507,508,510,516,518,519,520,523,527,531,532,538,539,539,544,550,552,553,555,556,557,558,559,560,561,562,565,566,567,568,569,570,575,580,580,580,582,583,584,588,589,590,591,592,593,596,598,599,600,601,603,604,605,606,607,608,609,610,613,616,617,630,631,632,633,644,645,646,647,648,649,650,657,658,659,660,661,663,664,665,666,667,668,669,670,672,674,675,676,677,678,679,681,683,686,688,701,702,703,704,705,706,710,711,712,713,714,715,716,717,719,720,721,722,723,724,725,729,730,731,733,735,737,738,739,757,758,759,761,762,763,764,766,767,768,769,770,771,772,773,774,776,777,780,781,783,784,787,788,790,791,791,794,798,805,806,807,808,809,810,814,821,822,823,824,825,826,827,828,829,833,843,844,845,846,846,847,848,848,849,850,850,851,852,859,863,865,866,867,868,869,871,873,875,878,879,880,883,884,888,889,890,891,893,896,901,903,904,905,906,908,908,911,912,913,914,918,919,920,921,928,929,930,931,935,940,942,944,945,948,949,950,953,954,957,958,961,964,965,970,976,977,978,979,981,981,983,984,988,993,997,998,1000,1001,1002,1003,1004,1005,1008,1009,1003,1012,1013,1014,1018,1021,1023,1024,1025,1026,1027,1028,1029,1031,1032,1033,1036,1037,1042,1044,1045,1046,1052,1054,1055,1058,1064,1065,1066,1070,1071,1072,1076,1077,1078,1080,1085,1086,1087,1089,1091,1092,1093,1094,1095,1099,1100,1101,1107,1109,1110,1113,1114,1115,1116,1119,1120,1122,1123,1124,1125,1128,1129,1131,1132,1133,1134,1136,1137,1142,1143,1144,1149,1154,1158,1159,1160,1163,1165,1170,1171,1175,1176,1177,1178,1179,1182,1188,1189,1190,1191,1193,1194,1198,1199,1200,1206,1211,1212,1213,1214,1220,1221,1222,1223,1224,1228,1229,1230,1231,1232,1233,1234,1237,1241,1242,1243,1244,1245,1246,1250,1251,1252,1253,1254,1255,1256,1260,1261,1268,1269,1273,1274,1274,1275,1276,1279,1285,1286,1286,1286,1290,1291,1292,1293,1297,1298,1299,1300,1301,1302,1303,1304,1305,1309,1310,1311,1312,1313,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1328,1329,1333,1335,1336,1339,1340,1341,1348,1352,1354,1355,1357,1368,1369,1370,1371,1375,1378,1383,1384],"start":{"34":{"BEGIN":[{"branch":null,"condition":null,"subroutine":3,"statement":9,"time":null}]},"153":{"load_spocfile":[{"branch":9,"condition":1,"subroutine":12,"statement":75,"time":null}]},"36":{"BEGIN":[{"branch":null,"subroutine":5,"condition":null,"time":null,"statement":15}]},"37":{"BEGIN":[{"time":null,"statement":18,"subroutine":6,"condition":null,"branch":null}]},"76":{"get_aaa_password":[{"time":null,"statement":29,"subroutine":9,"condition":null,"branch":null}]},"1064":{"device_cmd":[{"subroutine":40,"condition":34,"time":null,"statement":566,"branch":152}]},"357":{"parse_config1":[{"branch":43,"statement":182,"time":null,"condition":3,"subroutine":19}]},"1297":{"compare":[{"branch":171,"condition":39,"subroutine":64,"statement":685,"time":null}]},"1198":{"banner_msg":[{"subroutine":53,"condition":38,"time":null,"statement":633,"branch":165}]},"1188":{"get_version":[{"branch":164,"subroutine":52,"condition":37,"time":null,"statement":627}]},"241":{"add_prefix_info":[{"branch":18,"time":null,"statement":122,"subroutine":16,"condition":1}]},"757":{"acl_prepare":[{"condition":29,"subroutine":32,"statement":405,"time":null,"branch":124}]},"1290":{"compare_common":[{"branch":171,"subroutine":63,"condition":39,"time":null,"statement":681}]},"1170":{"search_banner":[{"subroutine":50,"condition":37,"time":null,"statement":619,"branch":161}]},"135":{"get_spoc_data":[{"branch":6,"subroutine":11,"condition":1,"time":null,"statement":64}]},"1175":{"checkbanner":[{"subroutine":51,"condition":37,"time":null,"statement":621,"branch":161}]},"1076":{"cmd_check_echo":[{"branch":152,"statement":572,"time":null,"condition":34,"subroutine":42}]},"701":{"acl_line_a_in_b":[{"branch":107,"condition":21,"subroutine":30,"statement":376,"time":null}]},"821":{"obj_relation":[{"subroutine":34,"condition":31,"time":null,"statement":441,"branch":128}]},"538":{"unique":[{"branch":81,"subroutine":24,"condition":16,"time":null,"statement":291}]},"31":{"BEGIN":[{"condition":null,"subroutine":null,"statement":null,"time":null,"branch":null}]},"330":{"parse_line":[{"branch":38,"subroutine":18,"condition":3,"time":null,"statement":171}]},"259":{"parse_seq":[{"subroutine":17,"condition":2,"time":null,"statement":134,"branch":20}]},"644":{"ip_netz_a_in_b":[{"branch":92,"statement":345,"time":null,"condition":19,"subroutine":28}]},"516":{"route_line_a_eq_b":[{"branch":78,"statement":283,"time":null,"condition":11,"subroutine":22}]},"1052":{"cmd":[{"branch":151,"time":null,"statement":562,"subroutine":39,"condition":34}]},"1309":{"compare_files":[{"branch":171,"condition":39,"subroutine":65,"statement":694,"time":null}]},"1220":{"con_setup":[{"branch":167,"statement":641,"time":null,"condition":38,"subroutine":55}]},"1142":{"abort_cmd":[{"branch":160,"subroutine":46,"condition":37,"time":null,"statement":609}]},"1368":{"lock":[{"branch":180,"condition":40,"subroutine":68,"statement":722,"time":null}]},"1241":{"con_set_logtype":[{"branch":169,"condition":38,"subroutine":57,"statement":654,"time":null}]},"166":{"load_raw":[{"subroutine":13,"condition":1,"time":null,"statement":83,"branch":10}]},"1149":{"schedule_reload":[{"time":null,"statement":612,"subroutine":47,"condition":37,"branch":160}]},"1260":{"mark_as_changed":[{"branch":170,"time":null,"statement":667,"subroutine":59,"condition":38}]},"1383":{"unlock":[{"statement":728,"time":null,"condition":41,"subroutine":69,"branch":183}]},"1158":{"checkidentity":[{"subroutine":49,"condition":37,"time":null,"statement":614,"branch":160}]},"863":{"acl_array_compare_a_in_b":[{"branch":132,"statement":465,"time":null,"condition":31,"subroutine":36}]},"33":{"BEGIN":[{"branch":null,"statement":6,"time":null,"condition":null,"subroutine":2}]},"1042":{"issue_cmd":[{"time":null,"statement":558,"subroutine":38,"condition":34,"branch":151}]},"630":{"ports_a_in_b":[{"branch":90,"subroutine":27,"condition":17,"time":null,"statement":341}]},"1250":{"prepare_device":[{"condition":38,"subroutine":58,"statement":660,"time":null,"branch":170}]},"1085":{"get_cmd_output":[{"statement":576,"time":null,"condition":34,"subroutine":43,"branch":153}]},"45":{"new":[{"statement":21,"time":null,"condition":null,"subroutine":7,"branch":null}]},"464":{"merge_rawdata":[{"condition":6,"subroutine":21,"statement":250,"time":null,"branch":69}]},"1154":{"cancel_reload":[{"condition":37,"subroutine":48,"statement":613,"time":null,"branch":160}]},"710":{"acl_line_a_eq_b":[{"time":null,"statement":382,"subroutine":31,"condition":23,"branch":111}]},"997":{"acl_equal":[{"branch":147,"time":null,"statement":530,"subroutine":37,"condition":33}]},"1333":{"logging":[{"branch":172,"condition":39,"subroutine":67,"statement":711,"time":null}]},"1273":{"print_change_status":[{"branch":170,"condition":39,"subroutine":61,"statement":671,"time":null}]},"544":{"vrf_route_mode":[{"branch":81,"statement":294,"time":null,"condition":16,"subroutine":25}]},"114":{"get_user_password":[{"subroutine":10,"condition":1,"time":null,"statement":52,"branch":5}]},"206":{"load_spoc":[{"time":null,"statement":108,"subroutine":14,"condition":1,"branch":18}]},"1317":{"approve":[{"condition":39,"subroutine":66,"statement":699,"time":null,"branch":171}]},"-1":{"__COVER__":[{"branch":184,"condition":41,"subroutine":70,"statement":730,"time":null}]},"1211":{"move_logfile":[{"time":null,"statement":637,"subroutine":54,"condition":38,"branch":165}]},"32":{"BEGIN":[{"branch":null,"condition":null,"subroutine":1,"statement":3,"time":null}]},"531":{"route_line_destination_a_eq_b":[{"time":null,"statement":289,"subroutine":23,"condition":15,"branch":81}]},"657":{"services_a_in_b":[{"subroutine":29,"condition":19,"time":null,"statement":352,"branch":94}]},"1228":{"con_shutdown":[{"condition":38,"subroutine":56,"statement":646,"time":null,"branch":168}]},"1070":{"shcmd":[{"statement":569,"time":null,"condition":34,"subroutine":41,"branch":152}]},"454":{"parse_config":[{"branch":69,"condition":6,"subroutine":20,"statement":244,"time":null}]},"1107":{"two_cmd":[{"statement":588,"time":null,"condition":35,"subroutine":45,"branch":156}]},"843":{"get_hash_matches":[{"branch":129,"condition":31,"subroutine":35,"statement":451,"time":null}]},"1268":{"mark_as_unchanged":[{"branch":170,"condition":38,"subroutine":60,"statement":669,"time":null}]},"1099":{"cmd_abort_on_error":[{"branch":155,"time":null,"statement":585,"subroutine":44,"condition":35}]},"55":{"match":[{"statement":24,"time":null,"condition":null,"subroutine":8,"branch":null}]},"35":{"BEGIN":[{"statement":12,"time":null,"condition":null,"subroutine":4,"branch":null}]},"1285":{"found_changes":[{"condition":39,"subroutine":62,"statement":677,"time":null,"branch":171}]},"217":{"load_device":[{"branch":18,"subroutine":15,"condition":1,"time":null,"statement":116}]},"805":{"prot_relation":[{"time":null,"statement":434,"subroutine":33,"condition":29,"branch":127}]},"550":{"process_routing":[{"condition":16,"subroutine":26,"statement":295,"time":null,"branch":81}]}},"branch":[[80,{"text":"unless $system_user and $self->{'USER'} eq $system_user"}],[83,{"text":"unless my $aaa_credential = $self->{'CONFIG'}{'aaa_credentials'}"}],[84,{"text":"unless open my $file, '<', $aaa_credential"}],[101,{"text":"if ($count != 3)"}],[105,{"text":"if (match($pattern, $name))"}],[118,{"text":"unless open my $tty, '>:unix', '/dev/tty'"}],[138,{"text":"unless open my $file, '<', $spocfile"}],[140,{"text":"if ($line =~ /\\[ Model = (\\S+) ]/)"}],[143,{"text":"if ($line =~ /\\[ IP = (\\S+) ]/)"}],[156,{"text":"unless open my $file, '<', $path"}],[170,{"text":"unless open my $file, '<', $raw"}],[169,{"text":"if (-f $raw)"}],[178,{"text":"if ($prepend[$i] =~ /^\\[APPEND\\]\\s*$/)"}],[186,{"text":"if (defined $index)"}],[192,{"text":"if (my $count = @prepend)"}],[196,{"text":"if $msg"}],[195,{"text":"if (my $count = @append)"}],[199,{"text":"if ($msg)"}],[251,{"text":"if (my $subcmd = $parse_info->{$key}{'subcmd'})"}],[255,{"text":"if keys %$result"}],[272,{"text":"if (my $msg = $part->{'error'})"}],[277,{"text":"/^\\$(.*)/ ? :"}],[277,{"text":"$params ? :"}],[281,{"text":"if $parser"}],[290,{"text":"if $parser"}],[292,{"text":"unless (defined $value)"}],[296,{"text":"if (my $key = $part->{'store'})"}],[295,{"text":"if (defined $value)"}],[279,{"text":"if (my $keys = $part->{'store_multi'}) { }"}],[265,{"text":"if (not $ref) { }"}],[265,{"text":"elsif ($ref eq 'HASH') { }"}],[265,{"text":"elsif ($ref eq 'CODE') { }"}],[265,{"text":"elsif ($ref eq 'ARRAY') { }"}],[315,{"text":"if $success"}],[320,{"text":"unless $success"}],[310,{"text":"if ($type eq 'seq') { }"}],[310,{"text":"elsif ($type eq 'or') { }"}],[310,{"text":"elsif ($type eq 'cond1') { }"}],[346,{"text":"unless keys %$result"}],[332,{"text":"if (not $ref) { }"}],[332,{"text":"elsif ($ref eq 'Regexp') { }"}],[332,{"text":"elsif ($ref eq 'CODE') { }"}],[332,{"text":"elsif ($ref eq 'ARRAY') { }"}],[361,{"text":"if (my $msg = $cmd_info->{'error'})"}],[365,{"text":"unless ($cmd_info->{'leave_cmd_as_arg'})"}],[370,{"text":"if ($named and $named ne 'from_parser')"}],[374,{"text":"$_ eq '_cmd' ? :"}],[375,{"text":"$cmd_info->{'params'} ? :"}],[377,{"text":"if $parser"}],[381,{"text":"unless my $parse_info = $cmd_info->{'subcmd'}"}],[384,{"text":"if (defined $value) { }"}],[383,{"text":"if (keys %$value2)"}],[379,{"text":"if (my $subcmds = $arg->{'subcmd'})"}],[392,{"text":"unless (defined $value)"}],[395,{"text":"unless (defined $value)"}],[399,{"text":"unless $name = $value->{'name'}"}],[398,{"text":"if ($named and $named eq 'from_parser')"}],[402,{"text":"if $named"}],[401,{"text":"if (ref $value eq 'HASH')"}],[407,{"text":"ref $store ? :"}],[414,{"text":"if $key eq '_cmd'"}],[409,{"text":"if ($named) { }"}],[418,{"text":"if $x eq '_cmd'"}],[429,{"text":"if $key =~ /(?:name|line|orig)/"}],[431,{"text":"unless $old->{$key} eq $value->{$key}"}],[430,{"text":"if (defined $old->{$key}) { }"}],[427,{"text":"if ($cmd_info->{'merge'}) { }"}],[426,{"text":"if (my $old = $dest->{$key}) { }"}],[422,{"text":"if ($cmd_info->{'multi'}) { }"}],[468,{"text":"unless ref $v eq 'HASH' and keys %$v"}],[467,{"text":"if (my(@keys) = grep({my $v = $raw_append->{$_};\nref $v eq 'ARRAY' unless ref $v eq 'HASH' and keys %$v;} keys %$raw_append))"}],[486,{"text":"$vrf ? :"}],[487,{"text":"if $count"}],[496,{"text":"if $count"}],[504,{"text":"if ($spoc_v->{$name})"}],[510,{"text":"if $count"}],[478,{"text":"if ($key eq 'ROUTING_VRF') { }"}],[478,{"text":"elsif (ref $raw_v eq 'ARRAY') { }"}],[518,{"text":"unless $a->{'BASE'} == $b->{'BASE'} and $a->{'MASK'} == $b->{'MASK'}"}],[523,{"text":"unless defined $a->{$key} and defined $b->{$key} and $a->{$key} eq $b->{$key}"}],[520,{"text":"if (defined $a->{$key} or defined $b->{$key})"}],[560,{"text":"$vrf ? :"}],[559,{"text":"unless ($spoc_routing)"}],[568,{"text":"if ($self->route_line_a_eq_b($c, $s))"}],[582,{"text":"if $r->{'DELETE'}"}],[589,{"text":"if $c->{'DELETE'}"}],[590,{"text":"if ($self->route_line_destination_a_eq_b($r, $c))"}],[599,{"text":"if $r->{'DELETE'}"}],[609,{"text":"if (ref $cmd eq 'ARRAY') { }"}],[603,{"text":"if (@cmds)"}],[631,{"text":"if $a->{'HIGH'} < $b->{'LOW'} or $b->{'HIGH'} < $a->{'LOW'}"}],[632,{"text":"if $b->{'LOW'} <= $a->{'LOW'} and $a->{'HIGH'} <= $b->{'HIGH'}"}],[648,{"text":"if ($m & $a->{'BASE'}) != ($m & $b->{'BASE'})"}],[649,{"text":"if ($am | $bm) == $am"}],[660,{"text":"if ($bproto eq 'ip')"}],[668,{"text":"unless defined $b_spec->{$what}"}],[669,{"text":"unless defined $a_spec->{$what}"}],[670,{"text":"unless $a_spec->{$what} eq $b_spec->{$what}"}],[664,{"text":"if ($bproto eq 'icmp')"}],[675,{"text":"unless my $src = ports_a_in_b($a->{'SRC_PORT'}, $b->{'SRC_PORT'})"}],[676,{"text":"unless my $dst = ports_a_in_b($a->{'DST_PORT'}, $b->{'DST_PORT'})"}],[678,{"text":"unless $b->{'ESTA'}"}],[679,{"text":"if $a->{'ESTA'}"}],[677,{"text":"if ($src == 1 and $dst == 1)"}],[674,{"text":"if ($bproto eq 'tcp' or $bproto eq 'udp')"}],[663,{"text":"if ($bproto eq $aproto) { }"}],[663,{"text":"elsif ($aproto eq 'ip') { }"}],[702,{"text":"unless my $src = $self->ip_netz_a_in_b($a->{'SRC'}, $b->{'SRC'})"}],[703,{"text":"unless my $dst = $self->ip_netz_a_in_b($a->{'DST'}, $b->{'DST'})"}],[704,{"text":"unless my $srv = $self->services_a_in_b($a, $b)"}],[705,{"text":"if $src == 1 and $dst == 1 and $srv == 1"}],[711,{"text":"if $a->{'MODE'} ne $b->{'MODE'}"}],[712,{"text":"if $a->{'TYPE'} ne $b->{'TYPE'}"}],[716,{"text":"if $aobj->{'BASE'} != $bobj->{'BASE'}"}],[717,{"text":"if $aobj->{'MASK'} != $bobj->{'MASK'}"}],[723,{"text":"if defined $as->{$where} xor defined $bs->{$where}"}],[724,{"text":"unless defined $as->{$where}"}],[725,{"text":"if $as->{$where} != $bs->{$where}"}],[733,{"text":"if $aport->{'LOW'} != $bport->{'LOW'} or $aport->{'HIGH'} != $bport->{'HIGH'}"}],[735,{"text":"if $a->{'ESTA'} xor $b->{'ESTA'}"}],[719,{"text":"if ($a->{'TYPE'} eq 'icmp') { }"}],[719,{"text":"elsif ($a->{'TYPE'} eq 'tcp' or $a->{'TYPE'} eq 'udp') { }"}],[737,{"text":"if $a->{'LOG'} xor $b->{'LOG'}"}],[738,{"text":"if $a->{'LOG'} and $a->{'LOG'} ne $b->{'LOG'}"}],[776,{"text":"if (my $unique = $sb2sm2src{$sb}{$sm}) { }"}],[783,{"text":"if (my $unique = $db2dm2dst{$db}{$dm}) { }"}],[790,{"text":"if ($do_acl_hash) { }"}],[809,{"text":"if ($a eq $b or $a eq 'ip' or $b eq 'ip')"}],[828,{"text":"if (($ab & $m) == ($bb & $m))"}],[851,{"text":"if (my $r2_aref = $bhash->{$d})"}],[849,{"text":"if (my $bhash = $bhash->{$s})"}],[847,{"text":"if (my $bhash = $bhash->{$p})"}],[880,{"text":"if ($s->{'MODE'} eq 'deny')"}],[890,{"text":"if ($result == 1) { }"}],[890,{"text":"elsif ($result == 2) { }"}],[930,{"text":"if ($self->acl_line_a_in_b($deny, $cd) == 1)"}],[944,{"text":"if ($deny_match eq 'DMIS')"}],[914,{"text":"if ($p->{'MODE'} eq 'deny') { }"}],[953,{"text":"if ($p->{'LOG'} ne $s->{'LOG'})"}],[949,{"text":"if ($p->{'LOG'} xor $s->{'LOG'}) { }"}],[949,{"text":"elsif ($p->{'LOG'}) { }"}],[957,{"text":"if ($lm)"}],[964,{"text":"if ($p->{'MODE'} eq 'deny') { }"}],[913,{"text":"if ($result == 1) { }"}],[913,{"text":"elsif ($result == 2) { }"}],[978,{"text":"if (@perm_int) { }"}],[977,{"text":"unless ($deny_match eq 'DMIS')"}],[1004,{"text":"if ($self->acl_line_a_eq_b($conf_acl->[$i], $spoc_acl->[$i])) { }"}],[1012,{"text":"unless ($diff)"}],[1000,{"text":"if (@$conf_acl == @$spoc_acl) { }"}],[1031,{"text":"if ($newinold and $oldinnew) { }"}],[1054,{"text":"if ($self->{'COMPARE'}) { }"}],[1077,{"text":"if ($echo ne $cmd)"}],[1089,{"text":"if $self->{'RELOAD_SCHEDULED'} and $self->handle_reload_banner(\\$out)"}],[1094,{"text":"if $need_reload"}],[1100,{"text":"if ($self->cmd_check_error($cmd, $lines))"}],[1122,{"text":"if $self->{'RELOAD_SCHEDULED'} and $self->handle_reload_banner(\\$out)"}],[1131,{"text":"if $self->{'RELOAD_SCHEDULED'} and $self->handle_reload_banner(\\$out)"}],[1137,{"text":"if $need_reload"}],[1109,{"text":"if ($self->{'COMPARE'}) { }"}],[1165,{"text":"unless $name eq $conf_name"}],[1176,{"text":"unless my $check = $self->{'CONFIG'}{'checkbanner'}"}],[1178,{"text":"if ($self->{'COMPARE'}) { }"}],[1177,{"text":"if (not $self->search_banner($check))"}],[1190,{"text":"unless (defined $self->{'VERSION'})"}],[1214,{"text":"unless system(\"mv $logfile $logfile.$date\") == 0"}],[1212,{"text":"if (-f $logfile)"}],[1221,{"text":"if $self->{'CONSOLE'}"}],[1232,{"text":"unless ($con->{'RESULT'}{'ERROR'})"}],[1242,{"text":"unless my $logdir = $self->{'OPTS'}{'L'}"}],[1275,{"text":"if ($self->{'CHANGE'}{$key}) { }"}],[1324,{"text":"if ($self->found_changes)"}],[1335,{"text":"unless my $logfile = $self->{'OPTS'}{'LOGFILE'}"}],[1341,{"text":"unless defined chmod(0755, $dirname)"}],[1340,{"text":"if (mkdir $dirname, 493) { }"}],[1340,{"text":"elsif (not -d $dirname) { }"}],[1339,{"text":"if ($dirname and not -d $dirname)"}],[1354,{"text":"unless open STDOUT, '>', $logfile"}],[1355,{"text":"unless chmod 0644, $logfile"}],[1357,{"text":"unless open STDERR, '>&STDOUT'"}],[1371,{"text":"unless open $lock_fh, '>', $lockfile"}],[1375,{"text":"unless $file_exists or chmod 0666, $lockfile"}],[1378,{"text":"unless flock $lock_fh, 6"}],[1384,{"text":"unless close $lock_fh"}]],"file":"lib/Netspoc/Approve/Device.pm"}