#!/usr/bin/perl
# Author: Arne Spetzler, Heinz Knutzen, Daniel Brunkhorst
#
# Description:
# Remote execute command on Cisco device.
#

use strict;
use warnings;
use Getopt::Long;
use Netspoc::Approve::Device;
use Netspoc::Approve::Linux;
use Netspoc::Approve::Cisco;
use Netspoc::Approve::IOS;
use Netspoc::Approve::IOS_FW;
use Netspoc::Approve::ASA;
use Netspoc::Approve::PIX;
use Netspoc::Approve::Helper;

our $VERSION = '1.052'; # VERSION: inserted by DZP::OurPkgVersion

sub usage {
    die <<END;
usage: rex [OPTION] 'COMMAND[;COMMAND]...' DEVICE|IP
Execute one or more commands on device and print output to STDOUT

Options:
 -L LOGDIR          path for saving session-logs
 -t SECONDS         timeout for session
END
}

my $global_config = Netspoc::Approve::Device->get_global_config();
Getopt::Long::Configure("no_ignore_case");

my %opts;

&GetOptions(
    \%opts,
    'L=s',
    't=i',
);

my $cmd = shift or usage;
my $host = shift or usage;

my %type2class = (
    Linux  => 'Netspoc::Approve::Linux',
    IOS    => 'Netspoc::Approve::IOS',
    IOS_FW => 'Netspoc::Approve::IOS_FW',
    ASA    => 'Netspoc::Approve::ASA',
    PIX    => 'Netspoc::Approve::PIX',
);

# Try to get type and IP address from spoc file (use only first IP address).
# This may fail if there is no spoc file or if host is an IP address.
my $spocfile = 
    "$global_config->{NETSPOC}current/$global_config->{CODEPATH}$host";
my ($type, $ip);
if (-f $spocfile) {
    ($type, $ip) = Netspoc::Approve::Device->get_spoc_data($spocfile);
}

$type ||= 'IOS';
$ip ||= $host;

# Get class from type.
my $class = $type2class{$type}
or die "Can't find class for spoc type '$type'\n";

# Take IP address from spoc file if available otherwise from device DB.
my $job = $class->new
    (
     NAME          => $host,
     OPTS          => \%opts,
     IP            => $ip,
     GLOBAL_CONFIG => $global_config,
     );

# Try to get password from device DB.
$job->{PASS} = $job->get_cw_password($host);

$job->remote_execute($cmd);
