#!/bin/sh
# missing-approve -- Show devices with missing approve.
# http://hknutzen.github.com/Netspoc
# (c) 2013 by Heinz Knutzen <heinz.knutzen@gmail.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# Abort on unexpected errors.
set -e

POLICYDB=$(get-netspoc-approve-conf netspocdir)
STATUS=$(get-netspoc-approve-conf statusdir)
POLICY=$(basename $(readlink $POLICYDB/current))
CODE=$POLICYDB/$POLICY/code

exit_code=0;

missing () { echo $1; }

compare_files () {
    if [ -f $1 ] ; then 
	cat $1
    elif [ -f $1.bz2 ] ; then
 	bzcat $1.bz2 
    elif [ -f $1.gz ] ; then
 	zcat $1.gz 
    else
	cat /dev/null
    fi | diff -I 'Generated by' -q - $2 > /dev/null ||
    missing $device; 
}

cd $CODE 
for device in * ; do
    case $device in *.raw) continue;; esac
    file=$STATUS/$device
    if [ ! -r $file ] ; then
        # Device has never been approved
	missing $device
	continue
    fi
    # Check status of last approve
    # OK|***WARNINGS***|***ERRORS***|***UNFINISHED APPROVE***
    case $(cut -d';' -f4 $file) in
	OK|\*\*\*WARNINGS\*\*\*) 
            # This policy has been approved to device
            approved=$(cut -d';' -f3 $file)
            anum=$(echo $approved | sed 's/[^0-9]//g')
            ;;
	*)
            # There had been errors during last approve
            anum=-1
            ;;
    esac

    # Check status of last Compare: DIFF|UPTODATE
    case $(cut -d';' -f13 $file) in
	UPTODATE)
            # This policy was used during compare.
	    compared=$(cut -d';' -f14 $file)
	    cnum=$(echo $compared | sed 's/[^0-9]//g')
	    ;;
        *)
            cnum=-1
            ;;
    esac

    # Both failed
    if [ $anum = -1 -a $cnum = -1 ] ; then
        missing $device
        continue
    # Take newer policy
    elif [ $anum -gt $cnum ] ; then
        last=$approved
    else
        last=$compared
    fi
    
    # If device' policy is equal to current policy, we are finished.
    [ $last = $POLICY ] && continue

    # Compare Netspoc code of device policy with Netspoc code of current policy.
    lcode=$POLICYDB/$last/code/$device
    compare_files $lcode $device;

    # Compare .raw files, if available.
    [ -f $device.raw ] && compare_files $lcode.raw $device.raw
done

# Exit with status 1, if at least one error occured.
exit $exit_code
